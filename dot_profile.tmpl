#!/bin/sh

########################################
### Application Defaults
########################################

export QT_QPA_PLATFORMTHEME="qt5ct"
export EDITOR=/usr/bin/vim
export BROWSER=/usr/bin/firefox
export TERMINAL_CMD="kitty -e"
export TERMINAL="kitty"

# Firefox touchscreen
# https://wiki.archlinux.org/title/Firefox#Touchscreen_gestures_and_pixel-perfect_trackpad_scrolling
export MOZ_USE_XINPUT2=1
# Firefox does not repaint after disabling/enabling compositing
# Note to self: I am not sure whether this actually fixes the
# behaviour I wanted to fix, which is that on reboot when I hit "restore seesion"
# the window stays halfscreen even if the window is fullscreen.
# https://wiki.archlinux.org/title/Firefox#Firefox_window_does_not_repaint_after_disabling_or_enabling_compositing
# Update: It didn't
unset MOZ_X11_EGL

########################################
### Configurations
########################################

export PATH="$PATH:/sbin"

export PATH="$PATH:$HOME/.local/bin"
# Add go to PATH
export PATH="$PATH:$HOME/.local/share/go/bin"
# Add npm to PATH
export PATH="$PATH:$HOME/.local/share/npm/bin"
# Add scripts to PATH
export PATH="$PATH:$HOME/.config/dotfiles/script"

# Load XDG_BASE_DIR configuration
source ~/.config/user-dirs.dirs

# Required by ssh-agent.service, which auto-starts ssh-agent
# https://wiki.archlinux.org/index.php/SSH_keys#Start_ssh-agent_with_systemd_user
export SSH_AUTH_SOCK="$XDG_RUNTIME_DIR/ssh-agent.socket"

########################################
### XDG_BASE_DIR: fucking conform
########################################

{{ if (eq .environment "headless") }}
# CHEZMOI: Some environment variables have been
# removed, as they can conflict in
# remote controlled environments.
{{- end }}

# NECESSARY
export VIMINIT="source $XDG_CONFIG_HOME/vim/vimrc"
export NVIM_LISTEN_ADDRESS=/tmp/nvimsocket

# XDG_CONFIG_HOME
export GTK2_RC_FILES="$XDG_CONFIG_HOME/gtk-2.0/gtkrc-2.0"
export NPM_CONFIG_USERCONFIG=$XDG_CONFIG_HOME/npm/npmrc
export DOT_SAGE="$XDG_CONFIG_HOME"/sage
{{- if (not (eq .environment "headless")) }}
export _JAVA_OPTIONS=-Djava.util.prefs.userRoot="$XDG_CONFIG_HOME"/java
{{- end }}

# XDG_DATA_HOME
export NODE_REPL_HISTORY="$XDG_DATA_HOME/node_repl_history"
export GRADLE_USER_HOME="$XDG_DATA_HOME/gradle"
export SSB_HOME="$XDG_DATA_HOME/zoom" # Zoom
export GOPATH="$XDG_DATA_HOME/go"
# XDG_CACHE_HOME
export PKG_CACHE_PATH="$XDG_CACHE_HOME/pkg-cache"

# Less
export LESSKEY="$XDG_CONFIG_HOME/less/lesskey"
export LESSHISTFILE="$XDG_CACHE_HOME/less/history"

{{- if (not (eq .environment "headless")) }}
# Python
export PYTHONSTARTUP="$XDG_CONFIG_HOME/pythonrc"
export PYTHONHISTFILE="$XDG_DATA_HOME/python_history"
export IPYTHONDIR="$XDG_CONFIG_HOME/jupyter"
export JUPYTER_CONFIG_DIR="$XDG_CONFIG_HOME/jupyter"
{{- end }}

# Rust
export PATH="$PATH:$HOME/.local/share/cargo/bin"
export RUSTUP_HOME="$XDG_DATA_HOME/rustup"
export CARGO_HOME="$XDG_DATA_HOME/cargo"

# Haskell
export CABAL_CONFIG="$XDG_CONFIG_HOME/cabal/config"
export STACK_ROOT="$XDG_DATA_HOME/stack"
export GHCUP_USE_XDG_DIRS=1

# Pyenv
export PYENV_ROOT="$HOME/.local/src/pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init --path)"

# Tex Live
export TEXMFHOME=$XDG_DATA_HOME/texmf
export TEXMFVAR=$XDG_CACHE_HOME/texlive/texmf-var
export TEXMFCONFIG=$XDG_CONFIG_HOME/texlive/texmf-config

# Nvm
export NVM_DIR="$HOME/.local/share/nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
