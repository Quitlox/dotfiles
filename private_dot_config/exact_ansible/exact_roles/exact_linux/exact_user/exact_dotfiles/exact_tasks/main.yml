---
- name: Create XDG Home directories
  ansible.builtin.file:
    path: /home/{{ user_name }}/{{ item }}
    state: directory
    owner: "{{ user_name }}"
    group: "{{ user_name }}"
    mode: "0755"
  with_items:
    - .local/src
    - .local/bin

- name: Install 7zip
  become: true
  community.general.pacman:
    name: p7zip
  when: ansible_facts['os_family'] == "Archlinux"

- name: Install 7zip
  become: true
  ansible.builtin.apt:
    name: p7zip-full
  when: ansible_facts['os_family'] == "Debian"

- name: Install bitwarden-cli on Arch
  become: true
  community.general.pacman:
    name: bitwarden-cli
  when: ansible_facts['os_family'] == "Archlinux"

- name: Install bitwarden-cli on Debian (x86)
  community.general.snap:
    name: bw
  when:
    - ansible_facts['os_family'] == "Debian"
    - ansible_facts['architecture'] == "x86_64"

- name: Install bitwarden-cli on Debian (arm)
  community.general.npm:
    name: "@bitwarden/cli"
    global: true
  become: true
  when:
    - ansible_facts['os_family'] == "Debian"
    - ansible_facts['architecture'] == "aarch64" # arm64

- name: Check if logged into bitwarden
  ansible.builtin.command: bw status
  become: true
  become_user: "{{ user_name }}"
  environment:
    PATH: "{{ ansible_env.PATH }}:/home/{{ user_name }}/.local/bin"
  register: bitwarden_status
  changed_when: false

- name: Set bitwarden status
  ansible.builtin.set_fact:
    bitwarden_unauthenticated: "{{ (bitwarden_status.stdout | from_json).status == 'unauthenticated' }}"

- name: Login to bitwarden
  ansible.builtin.command: bw login --apikey
  become: true
  become_user: "{{ user_name }}"
  environment:
    BW_CLIENTID: "{{ bitwarden_client_id }}"
    BW_CLIENTSECRET: "{{ bitwarden_client_secret }}"
  when: bitwarden_status.rc == 0 and bitwarden_unauthenticated
  register: bitwarden_login
  changed_when: bitwarden_login.rc == 0

- name: Unlock bitwarden vault
  ansible.builtin.command: bw unlock {{ bitwarden_password }} --raw
  become: true
  become_user: "{{ user_name }}"
  register: bitwarden_session
  environment:
    BW_CLIENTID: "{{ bitwarden_client_id }}"
    BW_CLIENTSECRET: "{{ bitwarden_client_secret }}"
  when: bitwarden_status.rc == 0
  changed_when: bitwarden_session.rc == 0
  no_log: true

- name: Install chezmoi on Arch
  community.general.pacman:
    name: chezmoi
  become: true
  when: ansible_facts['os_family'] == "Archlinux"

- name: Install chezmoi on Debian
  community.general.snap:
    name: chezmoi
    classic: true
  become: true
  when: ansible_facts['os_family'] == "Debian"

- name: Configure chezmoi
  block:
    - name: Check if chezmoi is initialized
      ansible.builtin.command: "chezmoi status ~/.gitconfig"
      become: true
      become_user: "{{ user_name }}"
      register: chezmoi_status
      failed_when:
        chezmoi_status.rc not in [0, 1, 2]
        # 0: initialized, 1: uninitialized, 2: file does not exist
        #   (~/.gitconfig, which also means uninitialized)
      changed_when: false

    - name: Initialize chezmoi
      ansible.builtin.shell: "chezmoi init quitlox --promptString 'E-Mail (git)={{ user_git_email }}' --promptBool 'headless={{ system_headless }}' --apply"
      become: true
      become_user: "{{ user_name }}"
      when: chezmoi_status.rc != 0
      register: result
      changed_when: result.rc == 0
      environment:
        BW_SESSION: "{{ bitwarden_session.stdout }}"
        PATH: "{{ ansible_env.PATH }}:/snap/bin/"

    - name: Place the age encryption key
      ansible.builtin.copy:
        content: "{{ chezmoi_age_private_key }}"
        dest: "/home/{{ user_name }}/.ssh/.age_private_key.txt"
        decrypt: true
        owner: "{{ user_name }}"
        group: "{{ user_name }}"
        mode: "0644"

# We log out of bitwarden as the login method using apikey is not compatible
# with the password method (that the user may want to use)
- name: Logout of bitwarden
  ansible.builtin.command: bw logout
  become: true
  become_user: "{{ user_name }}"
  when: bitwarden_status.rc != 0
  changed_when: result.rc == 0
