import atexit
import os
import readline

# Ensure history is stored conform XDG
if 'PYTHONHISTFILE' in os.environ:
    history = os.path.expanduser(os.environ['PYTHONHISTFILE'])
elif 'XDG_DATA_HOME' in os.environ:
    history = os.path.join(os.path.expanduser(os.environ['XDG_DATA_HOME']),
                           'python', 'python_history')
else:
    history = os.path.join(os.path.expanduser('~'), '.python_history')

history = os.path.abspath(history)
_dir, _ = os.path.split(history)
os.makedirs(_dir, exist_ok=True)

print("[pythonrc] setting history path to", history)
# Check if file exists before attempting to read it
if os.path.exists(history):
    try:
        readline.read_history_file(history)
        # default history len is -1 (infinite), which may grow unruly
        readline.set_history_length(1000)
    except (FileNotFoundError, OSError):
        pass
else:
    # Create empty file if it doesn't exist
    open(history, 'a').close()

atexit.register(readline.write_history_file, history)

# Use ptpython as default REPL
import sys

try:
    from ptpython.repl import embed
except ImportError:
    print("ptpython is not available: falling back to standard prompt")
else:
    sys.exit(embed(globals(), locals()))
