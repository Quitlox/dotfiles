{
  "lspconfig": {
    "pyright": {
      "python.analysis.diagnosticMode": "openFilesOnly",
      "python.analysis.diagnosticSeverityOverrides": {
        "reportUnusedVariable": "information",
        "reportUnusedFunction": "information",
        "reportUnusedImport": "information",
        "reportGeneralTypeIssues": "none",
        "reportOptionalMemberAccess": "none",
        "reportOptionalSubscript": "none",
        "reportPrivateImportUsage": "none",
        "reportPossiblyUnboundVariable": "none"
      }
    },
    "basedpyright": {
      "basedpyright.disableOrganizeImports": true,
      "basedpyright.analysis.typeCheckingMode": "recommended",
      "basedpyright.analysis.diagnosticSeverityOverrides": {
        // found to be incorrect
        "reportAttributeAccessIssue": "none", 
        "reportArgumentType": "none",
        "reportReturnType": "none", 
        "reportUnusedFunction": "none", // not correct in single file mode, annoying
        "reportUnknownParameterType": "none",
        // I know what I am doing
        "reportConstantRedefinition": "none", 
        "reportUnusedCallResult": "none", 
        // not useful
        "reportUntypedClassDecorator": "none", 
        "reportUntypedFunctionDecorator": "none", 
        "reportImplicitStringConcatenation": "none", 
        "reportImportCycles": "none", 

        // we use mypy for typing
        "reportAny": "none", 
        "reportExplicitAny": "none", 
        "reportUnannotatedClassAttribute": "none", 
        "reportUnknownMemberType": "none", 
        "reportUnknownVariableType": "none",
        "reportUnknownArgumentType": "none",
        "reportMissingTypeStubs": "none",

        // redefine severity
        "reportUnreachable": "hint",
        "reportUnusedImport": "hint",
        "reportUnusedParameter": "hint",
        "reportUnusedVariable": "hint",
        "reportDeprecated": "hint",
      }
    }
  },
  "neoconf": {}
}
